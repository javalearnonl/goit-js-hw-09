{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,IACP,IAAMC,EAAgBC,KAAKC,SAAW,GAMtC,OALgB,IAAIC,SAAQ,SAACC,EAASC,GACpCL,EACII,EAAQJ,GACRK,EAAOL,E,KA3CF,CACXM,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAAU,SAAAC,GACrCA,EAAEC,iBACF,IAAMC,GAASF,EAAEG,OAAOC,SAASF,MAAMG,MACjCC,GAAQN,EAAEG,OAAOC,SAASE,KAAKD,MAC/BE,GAAUP,EAAEG,OAAOC,SAASG,OAAOF,MAErCG,EAAW,EAMf,SAASC,EAAcnB,GACrB,IAAMoB,EAAiBpB,EACnBqB,EAAAxB,GAASyB,OAAOC,QAChBF,EAAAxB,GAASyB,OAAOE,QACpB,IACEJ,EAAe,KAA2DK,OAArDzB,EAAgB,YAAc,WAAY,aAA0ByB,OAAfP,EAAS,QAAoCO,OAA9Bb,GAASM,EAAW,GAAKF,EAAK,M,CACvH,MAAOU,GACPC,QAAQD,MAAM,SAAUA,E,CAEtBR,EAAWD,IACbC,IACAU,YAAW,WACT7B,IACG8B,KAAKV,GACLW,MAAMX,E,GACRH,GAAQ,G,CAnBfjB,IACG8B,KAAKV,GACLW,MAAMX,GAqBTT,EAAEG,OAAOkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = +e.target.elements.delay.value;\n  const step = +e.target.elements.step.value;\n  const amount = +e.target.elements.amount.value;\n\n  let position = 1;\n\n  createPromise()\n    .then(handlePromise)\n    .catch(handlePromise);\n\n  function handlePromise(shouldResolve) {\n    const notifyFunction = shouldResolve\n      ? Notiflix.Notify.success\n      : Notiflix.Notify.failure;\n    try {\n      notifyFunction(`âœ… ${ shouldResolve ? 'Fulfilled' : 'Rejected' } promise ${position} in ${delay + (position - 1) * step}ms`);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    if (position < amount) {\n      position++;\n      setTimeout(() => {\n        createPromise()\n          .then(handlePromise)\n          .catch(handlePromise);\n      }, step || 0);\n    }\n  }\n\n  e.target.reset();\n});\n\nfunction createPromise() {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    shouldResolve\n      ? resolve(shouldResolve)\n      : reject(shouldResolve);\n  });\n  return promise;\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","formEl","document","querySelector","addEventListener","e","preventDefault","delay","target","elements","value","step","amount","position","handlePromise","notifyFunction","$parcel$interopDefault","Notify","success","failure","concat","error","console","setTimeout","then","catch","reset"],"version":3,"file":"03-promises.4cdc3e8e.js.map"}